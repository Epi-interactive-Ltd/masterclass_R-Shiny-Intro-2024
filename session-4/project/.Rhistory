install.packages("renv")
library(renv)
renv::init()
data()
View(BOD)
View(USAccDeaths)
View(EuStockMarkets)
install.packages("spData")
library(spData)
install.packages("sf")
library(sf)
st_read(system.file("shapes/world.gpkg", package = "spData")) -> worldData
View(worldData)
install.packages("st")
library(st)
worldData <- st_drop_geometry(worldData)
setwd("/cloud/project/stage1")
write.csv(worldData, file = "world_data.csv")
saveRDS(worldData, "world_data.RDS")
setwd("/cloud/project/stage2")
write.csv(worldData, file = "data/world_data.csv")
saveRDS(worldData, "data/world_data.RDS")
View(worldData)
shiny::runApp('/cloud/project/stage1')
runApp('/cloud/project/stage1')
runApp()
runApp()
View(worldData)
world_data <- readRDS("data/world_data.RDS") |>
select(-iso_a2) |>
filter(!is.na(pop))
world_data <- readRDS("data/world_data.RDS") |>
select(-iso_a2) |>
filter(!is.na(pop)) |>
mutate(Status = !is.na(pop) && !is.na(lifeExp) && !is.na(gdpPercap))
world_data <- readRDS("data/world_data.RDS") |>
select(-iso_a2) |>
filter(!is.na(pop)) |>
mutate(Status = !is.na(pop) & !is.na(lifeExp) & !is.na(gdpPercap))
View(world_data)
world_data <- readRDS("data/world_data.RDS") |>
select(-iso_a2) |>
filter(!is.na(pop)) |>
mutate(Status = !is.na(pop) & !is.na(lifeExp) & !is.na(gdpPercap)) |>
mutate(Status = ifelse(Status, "Complete", "Incomplete"))
View(world_data)
world_data <- readRDS("data/world_data.RDS") |>
select(-iso_a2) |>
filter(!is.na(pop)) |>
mutate(Status = !is.na(pop) & !is.na(lifeExp) & !is.na(gdpPercap)) |>
mutate(Status = ifelse(Status, "Complete", "Incomplete")) |>
mutate(popDensity = round(pop / area_km2))
View(world_data)
world_data <- readRDS("data/world_data.RDS") |>
select(-iso_a2) |>
filter(!is.na(pop)) |>
mutate(Status = !is.na(pop) & !is.na(lifeExp) & !is.na(gdpPercap)) |>
mutate(Status = ifelse(Status, "Complete", "Incomplete")) |>
mutate(popDensity = round(pop / area_km2, 4))
View(world_data)
runApp('/cloud/project/result')
runApp('/cloud/project/result')
runApp('/cloud/project/result')
View(world_data)
runApp('/cloud/project/result')
runApp('/cloud/project/result')
runApp('/cloud/project/result')
runApp('/cloud/project/result')
runApp('/cloud/project/result')
runApp('/cloud/project/result')
renv::status()
renv::init()
library(renv)
renv::init()
